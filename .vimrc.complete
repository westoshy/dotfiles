
"--------------------------------------------------------------------
" C/C++
"--------------------------------------------------------------------

" clang command setupj:w
let g:marching_clang_command="/usr/bin/clang++-3.5"
" let g:marching_backend="sync_wandbox"
let g:marching_backend = "sync_clang_command"
let g:marching_clang_command_option="-std=c++1y"
let g:marching_enable_neocomplete=1
" imap <C-x><C-o><Plug>(marching_start_omni_complete)
" imap <C-x><C-x><C-o> <Plug>(marching_force_start_omni_complete)
" let g:marching_enable_dup=1
" let g:marching#sync_wandbox#timeout="10"


" set include directory
let g:neocomplete#sources#include#paths = {
  \ 'cpp': '.,/usr/include,/usr/local/include'
  \ }

if !exists('g:neocomplete#sources#include#patterns') 
  let g:neocomplete#sources#include#patterns = {}
endif
let g:neocomplete#sources#include#patterns.c='^\s*#\s*include'
let g:neocomplete#sources#include#patterns.cpp='^\s*#\s*include'

let g:acp_enableAtStartup=0
let g:neocomplete#enable_at_startup=1
" let g:neocomplete#enable_ignore_case=1
" let g:neocomplete#enable_smart_case=1
" let g:neocomplete#skip_auto_completion_time=""
let g:neocomplete#force_overwrite_completefnc=1
if !exists('g:neocomplete#force_omni_input_patterns')
  let g:neocomplete#force_omni_input_patterns = {}
endif

let g:neocomplete#force_omni_input_patterns.cpp =
          \ '[^.[:digit:] *\t]\%(\.\|->\)\w*\|\h\w*::\w*'

"--------------------------------------------------------------------
" Python
"--------------------------------------------------------------------
autocmd FileType python let b:did_ftplugin=1
autocmd FileType python setlocal omnifunc=jedi#completions
autocmd FileType python setlocal completeopt-=preview
let g:jedi#popup_select_first=0
let g:jedi#auto_vim_configuration=0

"--------------------------------------------------------------------
" Ruby
"--------------------------------------------------------------------
let g:rsenseUseOmniFunc = 1
if !exists('g:neocomplete#force_omni_input_patterns')
  let g:neocomplete#force_omni_input_patterns = {}
endif
let g:neocomplete#force_omni_input_patterns.ruby = '[^. *\t]\.\w*\|\h\w*::'

"-------------------------------------------------------------------
" R
"-------------------------------------------------------------------
let g:vimrplugin_term="terminator"
let g:vimrplugin_term_cmd="terminator --title R -e"
let g:vimrplugin_r_path="/usr/bin/R"
let g:vimrplugin_allnames=1
let g:vimrplugin_show_args=1

if has("gui_running")
  inoremap <C-Space> <C-x><C-o>
else
  inoremap <Nul> <C-x><C-o>
endif
vmap <Space> <Plug>RDSendSelection
nmap <Space> <Plug>RDSendLine

"--------------------------------------------------------------------
" Haskell
"--------------------------------------------------------------------

